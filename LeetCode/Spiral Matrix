class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int i = 0;
        vector<int> spiralVector;

        if (matrix.size() == 0 || matrix[0].size() == 0)
            return {};

        if (matrix[0].size() == 1)
        {
            for (int j = 0; j < matrix.size(); j++)
                spiralVector.push_back(matrix[j][0]);

            return spiralVector;
        }

        while (true)
        {
            for (auto& x : matrix)
            {
                if (i == 0)
                {
                    for (int j = 0; j < x.size(); j++)
                    {
                        spiralVector.push_back(x[j]);
                    }
                }
                else if (i < matrix.size() - 1)
                {
                    spiralVector.push_back(x[x.size() - 1]);
                }
                else
                {
                    for (int j = x.size() - 1; j >= 0; j--)
                    {
                        spiralVector.push_back(x[j]);


                    }
                    for (int j = i - 1; j >= 1; j--)
                    {
                        spiralVector.push_back(matrix[j][0]);

                    }
                }
                i++;
            }
            i = 0;

            matrix.erase(matrix.begin());
            if(matrix.size() > 0)
                matrix.erase(matrix.end() - 1);

            for (int j = 0; j < matrix.size(); j++)
            {
                matrix[j].erase(matrix[j].begin());

                if (matrix[j].size() > 0)
                    matrix[j].erase(matrix[j].end() - 1);
            }

            if(matrix.size() == 0 || matrix[0].size() == 0)
                break;

            if (matrix[0].size() == 1)
            {
                for (int j = 0; j < matrix.size(); j++)
                    spiralVector.push_back(matrix[j][0]);

                return spiralVector;
            }
        }
        return spiralVector;
    }
};
